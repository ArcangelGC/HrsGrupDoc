<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>